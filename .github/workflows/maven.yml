# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main","development" ]
  pull_request:
    branches: [ "main","development" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 20.0.2
      uses: actions/setup-java@v3
      with:
        java-version: '20.0.2'
        distribution: 'temurin'
        cache: maven
        
    - name: Set up Environment Variables
      env:
        URL: ${{ env.URL }}
        USER_NAME: ${{ env.USER_NAME }}
        PASSWORD: ${{ env.PASSWORD }}
        ACCESS_KEY: ${{ env.ACCESS_KEY }}
        SECRET_KEY: ${{ env.SECRET_KEY }}
        URL_TEST: ${{ env.URL_TEST }}
        USER_NAME_TEST: ${{ env.USER_NAME_TEST }}
        PASSWORD_TEST: ${{ env.PASSWORD_TEST }}
      run: |
        echo "Current Directory Before Creating .env: $PWD"
        echo "URL=$URL" > $GITHUB_WORKSPACE/.env
        echo "USER_NAME=$USER_NAME" >> $GITHUB_WORKSPACE/.env
        echo "PASSWORD=$PASSWORD" >> $GITHUB_WORKSPACE/.env
        echo "ACCESS_KEY=$ACCESS_KEY" >> $GITHUB_WORKSPACE/.env
        echo "SECRET_KEY=$SECRET_KEY" >> $GITHUB_WORKSPACE/.env
        echo "URL_TEST=$URL_TEST" >> $GITHUB_WORKSPACE/.env
        echo "USER_NAME_TEST=$USER_NAME_TEST" >> $GITHUB_WORKSPACE/.env
        echo "PASSWORD_TEST=$PASSWORD_TEST" >> $GITHUB_WORKSPACE/.env
        echo "Current Directory After Creating .env: $PWD"
        echo "CLASSPATH::::::::::::::::::::::: $CLASSPATH"
        ls -a
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml